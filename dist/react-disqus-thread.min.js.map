{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///./dist/react-disqus-thread.min.js","webpack:///webpack/bootstrap c07456055f52bcaace68","webpack:///./lib/components/DisqusThread.js","webpack:///external \"React\"","webpack:///./lib/main.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireDefault","obj","default","copyProps","context","props","prefix","arguments","length","undefined","keys","forEach","prop","onNewComment","callbacks","comment","restProps","assign","DISQUS_CONFIG","_react","_react2","__disqusAdded","createClass","displayName","propTypes","id","PropTypes","string","shortname","isRequired","identifier","title","url","category_id","func","getDefaultProps","componentDidMount","loadDisqus","componentDidUpdate","render","createElement","href","className","addDisqusScript","child","disqus","document","parent","getElementsByTagName","async","type","src","appendChild","_this","window","location","DISQUS","reset","reload","config","page","replace"],"mappings":"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","file":"/home/ifroz/Projects/react-disqus-thread/dist/react-disqus-thread.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"React\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"React\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactDisqusThread\"] = factory(require(\"React\"));\n\telse\n\t\troot[\"ReactDisqusThread\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"React\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"React\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactDisqusThread\"] = factory(require(\"React\"));\n\telse\n\t\troot[\"ReactDisqusThread\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar DISQUS_CONFIG = ['shortname', 'identifier', 'title', 'url', 'category_id', 'onNewComment'];\nvar __disqusAdded = false;\n\nfunction copyProps(context, props) {\n  var prefix = arguments.length <= 2 || arguments[2] === undefined ? '' : arguments[2];\n\n  Object.keys(props).forEach(function (prop) {\n    context[prefix + prop] = props[prop];\n  });\n\n  if (typeof props.onNewComment === 'function') {\n    context[prefix + 'config'] = function config() {\n      this.callbacks.onNewComment = [function handleNewComment(comment) {\n        props.onNewComment(comment);\n      }];\n    };\n  }\n}\n\nfunction restProps(props) {\n  props = Object.assign({}, props);\n  return Object.keys(DISQUS_CONFIG).forEach(function (prop) {\n    delete props[prop];\n  });\n}\n\nmodule.exports = _react2['default'].createClass({\n  displayName: 'DisqusThread',\n\n  propTypes: {\n    id: _react2['default'].PropTypes.string,\n\n    /**\n     * `shortname` tells the Disqus service your forum's shortname,\n     * which is the unique identifier for your website as registered\n     * on Disqus. If undefined , the Disqus embed will not load.\n     */\n    shortname: _react2['default'].PropTypes.string.isRequired,\n\n    /**\n     * `identifier` tells the Disqus service how to identify the\n     * current page. When the Disqus embed is loaded, the identifier\n     * is used to look up the correct thread. If disqus_identifier\n     * is undefined, the page's URL will be used. The URL can be\n     * unreliable, such as when renaming an article slug or changing\n     * domains, so we recommend using your own unique way of\n     * identifying a thread.\n     */\n    identifier: _react2['default'].PropTypes.string,\n\n    /**\n     * `title` tells the Disqus service the title of the current page.\n     * This is used when creating the thread on Disqus for the first time.\n     * If undefined, Disqus will use the <title> attribute of the page.\n     * If that attribute could not be used, Disqus will use the URL of the page.\n     */\n    title: _react2['default'].PropTypes.string,\n\n    /**\n     * `url` tells the Disqus service the URL of the current page.\n     * If undefined, Disqus will take the window.location.href.\n     * This URL is used to look up or create a thread if disqus_identifier\n     * is undefined. In addition, this URL is always saved when a thread is\n     * being created so that Disqus knows what page a thread belongs to.\n     */\n    url: _react2['default'].PropTypes.string,\n\n    /**\n     * `category_id` tells the Disqus service the category to be used for\n     * the current page. This is used when creating the thread on Disqus\n     * for the first time.\n     */\n    category_id: _react2['default'].PropTypes.string,\n\n    /**\n     * `onNewComment` function accepts one parameter `comment` which is a\n     * JavaScript object with comment `id` and `text`. This allows you to track\n     * user comments and replies and run a script after a comment is posted.\n     */\n    onNewComment: _react2['default'].PropTypes.func\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      shortname: null,\n      identifier: null,\n      title: null,\n      url: null,\n      category_id: null,\n      onNewComment: null\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.loadDisqus();\n  },\n\n  componentDidUpdate: function componentDidUpdate() {\n    this.loadDisqus();\n  },\n\n  render: function render() {\n    return _react2['default'].createElement(\n      'div',\n      restProps(this.props),\n      _react2['default'].createElement('div', { id: 'disqus_thread' }),\n      _react2['default'].createElement(\n        'noscript',\n        null,\n        _react2['default'].createElement(\n          'span',\n          null,\n          'Please enable JavaScript to view the',\n          _react2['default'].createElement(\n            'a',\n            { href: 'http://disqus.com/?ref_noscript' },\n            'comments powered by Disqus.'\n          )\n        )\n      ),\n      _react2['default'].createElement(\n        'a',\n        { href: 'http://disqus.com', className: 'dsq-brlink' },\n        'Blog comments powered by ',\n        _react2['default'].createElement(\n          'span',\n          { className: 'logo-disqus' },\n          'Disqus'\n        ),\n        '.'\n      )\n    );\n  },\n\n  addDisqusScript: function addDisqusScript() {\n    if (__disqusAdded) {\n      return;\n    }\n\n    var child = this.disqus = document.createElement('script');\n    var parent = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0];\n\n    child.async = true;\n    child.type = 'text/javascript';\n    child.src = '//' + this.props.shortname + '.disqus.com/embed.js';\n\n    parent.appendChild(child);\n    __disqusAdded = true;\n  },\n\n  loadDisqus: function loadDisqus() {\n    var _this = this;\n\n    var props = {};\n\n    // Extract Disqus props that were supplied to this component\n    DISQUS_CONFIG.forEach(function (prop) {\n      if (!!_this.props[prop]) {\n        props[prop] = _this.props[prop];\n      }\n    });\n\n    // Always set URL\n    if (!props.url || !props.url.length) {\n      props.url = window.location.href;\n    }\n\n    // If Disqus has already been added, reset it\n    if (typeof DISQUS !== 'undefined') {\n      DISQUS.reset({\n        reload: true,\n        config: function config() {\n          copyProps(this.page, props);\n\n          // Disqus needs hashbang URL, see https://help.disqus.com/customer/portal/articles/472107\n          this.page.url = this.page.url.replace(/#/, '') + '#!newthread';\n        }\n      });\n    } else {\n      // Otherwise add Disqus to the page\n      copyProps(window, props, 'disqus_');\n      this.addDisqusScript();\n    }\n  }\n});\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = __webpack_require__(0);\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// ./dist/react-disqus-thread.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c07456055f52bcaace68","import React from 'react';\nconst DISQUS_CONFIG = [\n  'shortname', 'identifier', 'title', 'url', 'category_id', 'onNewComment'\n];\nlet __disqusAdded = false;\n\nfunction copyProps(context, props, prefix = '') {\n  Object.keys(props).forEach((prop) => {\n    context[prefix + prop] = props[prop];\n  });\n\n  if (typeof props.onNewComment === 'function') {\n    context[prefix + 'config'] = function config() {\n      this.callbacks.onNewComment = [\n        function handleNewComment(comment) {\n          props.onNewComment(comment);\n        }\n      ];\n    };\n  }\n}\n\nfunction restProps(props) {\n  props = Object.assign({}, props);\n  return Object.keys(DISQUS_CONFIG).forEach(prop => { delete props[prop] });\n}\n\nmodule.exports = React.createClass({\n  displayName: 'DisqusThread',\n\n  propTypes: {\n    id: React.PropTypes.string,\n\n    /**\n     * `shortname` tells the Disqus service your forum's shortname,\n     * which is the unique identifier for your website as registered\n     * on Disqus. If undefined , the Disqus embed will not load.\n     */\n    shortname: React.PropTypes.string.isRequired,\n\n    /**\n     * `identifier` tells the Disqus service how to identify the\n     * current page. When the Disqus embed is loaded, the identifier\n     * is used to look up the correct thread. If disqus_identifier\n     * is undefined, the page's URL will be used. The URL can be\n     * unreliable, such as when renaming an article slug or changing\n     * domains, so we recommend using your own unique way of\n     * identifying a thread.\n     */\n    identifier: React.PropTypes.string,\n\n    /**\n     * `title` tells the Disqus service the title of the current page.\n     * This is used when creating the thread on Disqus for the first time.\n     * If undefined, Disqus will use the <title> attribute of the page.\n     * If that attribute could not be used, Disqus will use the URL of the page.\n     */\n    title: React.PropTypes.string,\n\n    /**\n     * `url` tells the Disqus service the URL of the current page.\n     * If undefined, Disqus will take the window.location.href.\n     * This URL is used to look up or create a thread if disqus_identifier\n     * is undefined. In addition, this URL is always saved when a thread is\n     * being created so that Disqus knows what page a thread belongs to.\n     */\n    url: React.PropTypes.string,\n\n    /**\n     * `category_id` tells the Disqus service the category to be used for\n     * the current page. This is used when creating the thread on Disqus\n     * for the first time.\n     */\n    category_id: React.PropTypes.string,\n\n    /**\n     * `onNewComment` function accepts one parameter `comment` which is a\n     * JavaScript object with comment `id` and `text`. This allows you to track\n     * user comments and replies and run a script after a comment is posted.\n     */\n    onNewComment: React.PropTypes.func\n  },\n\n  getDefaultProps() {\n    return {\n      shortname: null,\n      identifier: null,\n      title: null,\n      url: null,\n      category_id: null,\n      onNewComment: null\n    };\n  },\n\n  componentDidMount() {\n    this.loadDisqus();\n  },\n\n  componentDidUpdate() {\n    this.loadDisqus();\n  },\n\n  render() {\n    return (\n      <div {...restProps(this.props)}>\n        <div id=\"disqus_thread\"/>\n        <noscript>\n          <span>\n            Please enable JavaScript to view the\n            <a href=\"http://disqus.com/?ref_noscript\">comments powered by Disqus.</a>\n          </span>\n        </noscript>\n        <a href=\"http://disqus.com\" className=\"dsq-brlink\">\n          Blog comments powered by <span className=\"logo-disqus\">Disqus</span>.\n        </a>\n      </div>\n    );\n  },\n\n  addDisqusScript() {\n    if (__disqusAdded) {\n      return;\n    }\n\n    const child = this.disqus = document.createElement('script');\n    const parent = document.getElementsByTagName('head')[0] ||\n                 document.getElementsByTagName('body')[0];\n\n    child.async = true;\n    child.type = 'text/javascript';\n    child.src = '//' + this.props.shortname + '.disqus.com/embed.js';\n\n    parent.appendChild(child);\n    __disqusAdded = true;\n  },\n\n  loadDisqus() {\n    const props = {};\n\n    // Extract Disqus props that were supplied to this component\n    DISQUS_CONFIG.forEach((prop) => {\n      if (!!this.props[prop]) {\n        props[prop] = this.props[prop];\n      }\n    });\n\n    // Always set URL\n    if (!props.url || !props.url.length) {\n      props.url = window.location.href;\n    }\n\n    // If Disqus has already been added, reset it\n    if (typeof DISQUS !== 'undefined') {\n      DISQUS.reset({\n        reload: true,\n        config: function config() {\n          copyProps(this.page, props);\n\n          // Disqus needs hashbang URL, see https://help.disqus.com/customer/portal/articles/472107\n          this.page.url = this.page.url.replace(/#/, '') + '#!newthread';\n        }\n      });\n    } else { // Otherwise add Disqus to the page\n      copyProps(window, props, 'disqus_');\n      this.addDisqusScript();\n    }\n  }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/components/DisqusThread.js","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 1\n// module chunks = 0","module.exports = require('./components/DisqusThread');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/main.js"],"sourceRoot":""}